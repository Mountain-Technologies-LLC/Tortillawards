@page "/awards/delete"

@using Microsoft.EntityFrameworkCore
@using Tortillawards.Data

@inject ApplicationDbContext DB
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Award</h4>
    <hr />
    @if (award is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@award.Name</dd>
        </dl>
        <EditForm method="post" Model="award" OnValidSubmit="DeleteAward" FormName="delete" Enhance>
            <div class="btn-toolbar mb-5" role="toolbar">
                <div class="btn-group me-2" role="group">
                    <button type="submit" class="btn btn-danger" disabled="@(award is null)">Delete</button>
                </div>

                <div class="btn-group me-2" role="group">
                    <a type="button" class="btn btn-link" href="@($"/awards/details?id={Id}")">Back to Details</a>
                </div>
            </div>
        </EditForm>
    }
</div>

@code {
    Award? award;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        award = await DB.Awards.FirstOrDefaultAsync(m => m.Id == Id);

        if (award is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteAward()
    {
        DB.Awards.Remove(award!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/ballots");
    }
}
